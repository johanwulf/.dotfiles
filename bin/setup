#!/bin/bash
if [[ $OSTYPE != 'darwin'* ]]; then
    echo "Only runnable on macOS"
    exit 1
fi

clear
echo -e "\033[1;34mjohanwulf setup\033[0m"
echo ""
echo "This script will set up Homebrew, packages and config files"
echo "If you do not know what you are doing, do not proceed"
echo " "
echo -e "\033[1;31mProceeding will install Homebrew and package gum\033[0m"
echo " "
read -p "Press enter if you wish to continue"
echo " "

echo "This script requires administrator privileges for some operations"
sudo -v

# Keep sudo alive
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

echo "Installing Homebrew and gum..."

which -s brew

if [[ $? != 0 ]]; then
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)" > /dev/null
  
  if [[ -f "/opt/homebrew/bin/brew" ]]; then
    echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> ~/.zprofile
    eval "$(/opt/homebrew/bin/brew shellenv)"
  fi
  
  echo "✅ Brew installed"
  brew install gum jq > /dev/null
  echo "✅ gum installed"
else
  which -s gum
  if [[ $? != 0 ]]; then
    brew install gum jq > /dev/null
    echo "✅ gum installed"
  fi
fi

echo " "
echo -e "\033[1;31mProceeding with installation will back up and move the following files\033[0m"
echo "~/.config/*"
echo "~/.zshrc"
echo "~/.hushlogin"
echo "~/.dotfiles/*"
echo " "

gum confirm "Do you wish to continue?" && echo "" || exit 0
gum spin --spinner dot --title "Backing up files..." -- /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/johanwulf/.dotfiles/main/bin/dotfiles_backup)"
echo "✅ Files backed up"

gum spin --spinner dot --title "Cloning .dotfiles repository" -- git clone --bare https://github.com/johanwulf/.dotfiles.git $HOME/.dotfiles
/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME $@ checkout
/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME $@ config status.showUntrackedFiles no
/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME $@ remote set-url origin git@github.com:johanwulf/.dotfiles.git
echo "✅ Dotfiles cloned"

gum spin --spinner dot --title "Running brew update..." -- brew update
echo "✅ brew updated"
gum spin --spinner dot --title "Running brew upgrade..." -- brew upgrade
echo "✅ brew upgraded"
gum spin --spinner dot --title "Installing brew bundle packages..." -- brew bundle --file=$HOME/.config/Brewfile
echo "✅ brew packages installed"

export NVM_DIR="$HOME/.nvm"
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"
nvm install --lts
nvm use --lts

echo "✅ Updating macOS settings"

defaults write -g NSAutomaticPeriodSubstitutionEnabled -bool false
defaults write com.apple.dock "orientation" -string "right"
defaults write com.apple.dock "tilesize" -int "24"
defaults write com.apple.dock "autohide" -bool "true"
defaults write com.apple.dock "show-recents" -bool "false"
defaults write com.apple.dock "static-only" -bool "true"
defaults write NSGlobalDomain AppleShowAllExtensions -bool true
defaults write com.apple.finder "AppleShowAllFiles" -bool "false"
defaults write com.apple.finder "FXEnableExtensionChangeWarning" -bool "false"
defaults write com.apple.dock "mru-spaces" -bool "false"
defaults write NSGlobalDomain com.apple.swipescrolldirection -bool false
defaults write com.apple.finder "AppleShowAllFiles" -bool "true"
defaults write com.apple.screencapture "disable-shadow" -bool "true"

defaults write com.apple.dock persistent-apps -array
defaults write com.apple.dock persistent-others -array

defaults write com.apple.Accessibility ReduceMotionEnabled -bool true

defaults write -g KeyRepeat -int 2
defaults write -g InitialKeyRepeat -int 12

defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadCornerSecondaryClick -int 2
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadRightClick -bool true
defaults -currentHost write NSGlobalDomain com.apple.trackpad.trackpadCornerClickBehavior -int 1
defaults -currentHost write NSGlobalDomain com.apple.trackpad.enableSecondaryClick -bool true

defaults -currentHost write com.apple.controlcenter Bluetooth -int 18

defaults write com.apple.finder _FXShowPosixPathInTitle -bool true

defaults write ~/Library/Preferences/ByHost/com.apple.controlcenter.plist BatteryShowPercentage -bool true

defaults write com.apple.screencapture target -string "clipboard"

defaults write com.apple.dock wvous-tl-corner -int 0
defaults write com.apple.dock wvous-tr-corner -int 0
defaults write com.apple.dock wvous-bl-corner -int 0
defaults write com.apple.dock wvous-br-corner -int 0

sudo nvram SystemAudioVolume=" "

hidutil property --set '{"UserKeyMapping":[{"HIDKeyboardModifierMappingSrc":0x700000039,"HIDKeyboardModifierMappingDst":0x700000029}]}'

sudo spctl --master-disable

touch ~/.zshsecret

bash ~/bin/create-finder-terminal-service.sh 2>/dev/null || true

killall Finder
killall Dock
killall SystemUIServer

echo ""
echo "🎆 Setting up desktop spaces..."
gum confirm "Ready to set up 7 desktop spaces with your applications?" && bash ~/bin/setup-spaces.sh || echo "⚠️  Skipping space setup"

echo ""
echo "🎉 Setup complete!"
echo ""

gum confirm "Restart now to apply all settings?" && sudo shutdown -r now || echo "Remember to restart later for all settings to take effect"

